(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



ShowInstances[]:=Module[{i,j,k,ins,insatt},
Do[Print["CLASS = ",CLName[i]];
Print["--------------------"];
Do[
Print["Instance:",CLName[i],"<",j,">"];
ins=CLInstanceList[i][[j]];
Do[
insatt=InstanceAttributeValue[ins,CLAttributeList[i][[k]]];
If[IAConcluded[insatt]==True,
Print[ATTName[CLAttributeList[i][[k]]],"=",IAConcludedValue[insatt]]],
{k,1,Length[CLAttributeList[i]]}],{j,1,Length[CLInstanceList[i]]}],
{i,1,ClassNb}]]


ShowCL[]:=Module[{i},Do[
Print["Class : ",i];
Print["InstanceList = ",Map[InstanceNameFromInstance,CLInstanceList[i]]];
Print["AttributeList = ",Map[ATTName,CLAttributeList[i]]];
Print["Name = ",CLName[i]];
Print["-"];
,{i,1,ClassNb}]]


ShowINS[]:=Module[{i},Do[
Print[CLName[INSClass[i]]];
Print["Instance = ",i];
Print["Class = ",INSClass[i]];
Print["-"];
,{i,1,InstanceNb}]]


ShowATT[]:=Module[{i},Do[
Print["Attribute : ",i];
Print["Name = ",ATTName[i]];
Print["Class = ",CLName[ATTClass[i]]];
Print["Question = ",ATTQuestion[i]];
Print["LegalValues = ",ATTLegalValues[i]];
Print["Type = ",ATTType[i]];
Print["InitialValue = ",ATTInitialValue[i]];
Print["Rules = ",Map[BRName,ATTRules[i]]];
Print["-"];
,{i,1,AttributeNb}]]


ShowIA[]:=Module[{i},Do[
Print["InstanciedAttribute : ",i];
Print["Class = ",CLName[IAClass[i]]];
Print["Instance = ",InstanceNameFromInstance[IAInstance[i]]];
Print["Attribute = ",ATTName[IAAttribute[i]]];
Print["Concluded = ",IAConcluded[i]];
Print["ConcludedByBackchaining = ",IAConcludedByBackchaining[i]];
Print["ConcludedByQuestion = ",IAConcludedByQuestion[i]];
Print["ConcludedDirectly = ",IAConcludedDirectly[i]];
Print["ConcludedValue = ",IAConcludedValue[i]];
Print["SucceededRuleEvent = ",IASucceededRuleEvent[i]];
Print["TriedRules = ",Map[BRName,IATriedRules[i]]];
Print["-"];
,{i,1,InstanciedAttributeNb}]]


ShowBR[]:=Module[{i},Do[
Print["BackwardRule : ",i];
Print["Name = ",BRName[i]];
Print["Premisse = ",BRPremisse[i]];
Print["Conclusion = ",BRConclusion[i]];
Print["Class = ",CLName[BRClass[i]]];
Print["ConcludedAttribute = ",ATTName[BRConcludedAttribute[i]]];
Print["PremisseAttributeList = ",Map[ATTName,BRPremisseAttributeList[i]]];
Print["PremisseInstanceList = ",Map[InstanceNameFromInstance,BRPremisseInstanceList[i]]];
Print["-"];
,{i,1,BackwardRuleNb}]]


ShowSRE[]:=Module[{i},Do[
Print["SuccedeedRuleEvent : ",i];
Print["BackwardRule = ",BRName[SRERule[i]]];
Print["Instance = ",InstanceNameFromInstance[SREInstance[i]]];
Print["Attribute = ",ATTName[SREAttribute[i]]];
Print["ConclusionType = ",SREConclusionType[i]];
Print["-"];
,{i,1,SucceededRuleEventNb}]]
(* ??InstanceAttributeValue  shows the links to the InstanceidAttribute  *)
